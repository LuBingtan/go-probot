// Code generated by codegen. DO NOT EDIT.

package probot

import (
	"context"
	"fmt"
	"net/http"

	"github.com/google/go-github/v48/github"
)

func (app *githubApp) handelEvent(
	ctx context.Context,
	w http.ResponseWriter, r *http.Request,
	eventType string, rawPayload []byte,
) (handlerKey string) {
	switch string(eventType) {
    {{ range $event := .Events }}case GitHub.{{ $event.Type }}.Type():
        if err := genericHandleFunc(
			ctx, app.logger, string(eventType), func(e string, p *github.{{$event.Type}}Event) string {
				return getHandlerKey(e, p)
			},
			func(p *github.{{$event.Type}}Event) error {
				return parseWebHook(string(eventType), rawPayload, p)
			},
			func(payload *github.{{$event.Type}}Event) (*github.Client, GitGraphQLClient, error) {
				handlerKey = getHandlerKey(string(eventType), payload)
				return app.getClient(payload.GetInstallation().GetID())
			},
			app.handlers,
		); err != nil {
			app.handleError(w, err, http.StatusBadRequest)
			return
		}
	{{ end }}
	default:
		app.handleError(w, fmt.Errorf("event %s not found", eventType), http.StatusNotFound)
	}
	return
}
